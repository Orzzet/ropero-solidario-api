swagger: "2.0"
info:
  version: "1.0.0"
  title: "Ropero solidario"
host: "34.83.143.73:8850"
tags:
- name: auth
- name: orders
- name: items
- name: categories
- name: users
schemes:
- "http"
paths:
  /health:
    get:
      tags:
        - "health"
      summary: "[Implemented] Check if api is Online."
      operationId: "health"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
  /auth:
    post:
      tags:
        - "auth"
      summary: "[Implemented] Retrieves auth token."
      operationId: "auth"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "200":
          description: "Successful operation"
          schema:
            properties:
              token:
                type: string
        "405":
          description: "Validation exception"
  /orders:
    post:
      tags:
      - "orders"
      summary: "[Implemented] Add a new order"
      operationId: "addOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization
        type: string
        required: true
        default: Bearer {token}
      - in: body
        name: body
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/OrderResponse"
        "405":
          description: "Validation exception"
    get:
      tags:
        - "orders"
      summary: "[Implemented] Get all orders"
      operationId: "getOrders"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/OrderResponse"
  /orders/{orderId}:
    patch:
      tags:
        - "orders"
      summary: "[Implemented] Edit an existing order"
      operationId: "updateOrder"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: orderId
          type: integer
          required: true
        - in: body
          name: "body"
          schema:
            $ref: "#/definitions/Order"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/OrderResponse"
        "404":
          description: "Order not found"
        "405":
          description: "Validation exception"
    get:
      tags:
      - "orders"
      summary: "[Implemented] Get order by ID"
      operationId: "getOrder"
      produces:
      - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: orderId
          type: integer
          required: true
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/OrderResponse"
        "404":
          description: "Order not found"
        "405":
          description: "Validation error"
  /items:
    get:
      tags:
        - "items"
      summary: "[Implemented] Get items"
      operationId: "getItems"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ItemResponse"
    post:
      tags:
        - "items"
      summary: "[Implemented] Add a new item"
      operationId: "createItem"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            $ref: "#/definitions/Item"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ItemResponse"
        "405":
          description: "Validation error"
  /items/{itemId}:
    put:
      tags:
        - "items"
      summary: "[Implemented] Edit item"
      operationId: "updateItems"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: itemId
          type: integer
          required: true
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            $ref: "#/definitions/Item"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ItemResponse"
        "405":
          description: "Validation error"
    delete:
      tags:
        - "items"
      summary: "[Implemented] Delete item"
      operationId: "deleteItem"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: itemId
          type: integer
          required: true
      responses:
        "200":
          description: "Successful operation"
  /items/bulk:
    post:
      tags:
        - "items"
      summary: "Add new items in bulk"
      operationId: "addItems"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: "#/definitions/Item"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ItemResponse"
        "405":
          description: "Validation error"
    patch:
      tags:
        - "items"
      summary: "Edit items in bulk"
      operationId: "updateItem"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: "#/definitions/Item"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ItemResponse"
        "405":
          description: "Validation error"
  /categories:
    get:
      tags:
        - "categories"
      summary: "[Implemented] [Auth] Get categories"
      operationId: "getCategories"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/CategoryResponse"
    post:
      tags:
        - "categories"
      summary: "[Implemented] Add a new category"
      operationId: "addCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/CategoryResponse"
  /categories/{categoryId}:
    put:
      tags:
        - "categories"
      summary: "[Implemented] Edit a category"
      operationId: "editCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: categoryId
          type: integer
          required: true
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: "Successful operation"
    delete:
      tags:
        - "categories"
      summary: "[Implemented] Delete category"
      operationId: "deleteCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: categoryId
          type: integer
          required: true
      responses:
        "200":
          description: "Successful operation"
  /categories/bulk:
    post:
      tags:
        - "categories"
      summary: "[Implemented] Add new categories"
      operationId: "addCategories"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            properties:
              categories:
                type: array
                items:
                  $ref: "#/definitions/Category"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/CategoryResponse"
        "405":
          description: "Validation error"
    patch:
      tags:
        - "categories"
      summary: "Edit categories in bulk"
      operationId: "updateCategories"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            properties:
              categories:
                type: array
                items:
                  $ref: "#/definitions/CategoryResponse"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/CategoryResponse"
        "405":
          description: "Validation error"
  /users:
    post:
      tags:
        - "users"
      summary: "[Implemented] Add a new user (not approved)"
      operationId: "addUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/UserCreate"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserResponse"
        "405":
          description: "Validation exception"
    get:
      tags:
        - "users"
      summary: "[Implemented] Get all users"
      operationId: "getUsers"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/UserResponse"
  /users/{userId}:
    get:
      tags:
        - "users"
      summary: "[Implemented] Get user"
      operationId: "getUser"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: userId
          type: integer
          required: true
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserResponse"
        "405":
          description: "Validation exception"
    delete:
      tags:
        - "users"
      summary: "[Implemented] Delete user"
      operationId: "deleteUser"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: userId
          type: integer
          required: true
      responses:
        "200":
          description: "Successful operation"
        "405":
          description: "Validation exception"
  /users/{userId}/approve:
    post:
      tags:
        - "users"
      summary: "[Implemented] Approve user"
      operationId: "approveUser"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: userId
          type: integer
          required: true
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserResponse"
        "405":
          description: "Validation exception"
  /users/{userId}/resetPassword:
    post:
      tags:
        - "users"
      summary: "[Implemented] Reset user password"
      operationId: "resetPassword"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          default: Bearer {token}
        - in: path
          name: userId
          type: integer
          required: true
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserResponse"
        "405":
          description: "Validation exception"
definitions:
  Order:
    type: object
    properties:
      status:
        type: string
        description: "Order Status"
        enum:
          - "requested"
          - "completed"
          - "discarded"
      requesterName:
        type: string
      requesterPhone:
        type: string
      lines:
        type: array
        items:
          type: object
          properties:
            lineId:
              type: integer
            itemId:
              type: integer
            orderId:
              type: integer
            amount:
              type: integer
  OrderResponse:
    type: object
    properties:
      id:
        type: integer
      statusUpdatedOn:
        type: integer
      statusUpdatedBy:
        type: object
        $ref: "#/definitions/UserResponse"
      createdOn:
        type: integer
      createdBy:
        type: object
        $ref: "#/definitions/UserResponse"
    allOf:
      - $ref: "#/definitions/Order"
  Category:
    type: object
    properties:
      name:
        type: string
  CategoryResponse:
    type: object
    properties:
      id:
        type: integer
    allOf:
      - $ref: "#/definitions/Category"
  Item:
    type: object
    properties:
      name:
        type: string
      category:
        type: integer
      amount:
        type: integer
  ItemResponse:
    allOf:
      - $ref: "#/definitions/Item"
    type: object
    properties:
      id:
        type: integer
  User:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      role:
        type: string
        enum:
          - admin
          - superadmin
  UserCreate:
    allOf:
      - $ref: "#/definitions/User"
    properties:
      password:
        type: string
  UserResponse:
    type: object
    properties:
      id:
        type: integer
      isApproved:
        type: boolean
    allOf:
      - $ref: "#/definitions/User"